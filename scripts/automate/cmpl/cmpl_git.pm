#!/usr/local/bin/perl

package cmpl_git;
use Exporter;
use FindBin;
use cmpl_utils;

# //////////////////////////////////////////////////////////////////////////////
# @brief export modules
# //////////////////////////////////////////////////////////////////////////////

our @ISA= qw( Exporter );

# these CAN be exported.
our @EXPORT_OK = qw(
  @_git_deployer
  get_git_help_messages
);

# these are exported by default.
our @EXPORT = qw(
  @_git_deployer
  get_git_help_messages
);

our (
  @_git_deployer,
);

# read the deployer's cli matches (autogenerated by install-deployer.bash)
@_git_deployer = openfile("git.cmpl");

# //////////////////////////////////////////////////////////////////////////////
# @brief various help messages
# //////////////////////////////////////////////////////////////////////////////

my $_optional_options = "
About: 11...
About: 12... == Optional Flags ==
About: 13...
About: 14...   -p           : preview the deployer commands that will be run
About: 15...   -verbose     : show the exact (verbose) bash commands that will run
About: 16...
About: 17... == Your Options Are ==
About: 18...";

# @breif setup the different types of git command summary messages
my %_git_switch_message_headers = (
    clone => "About: 01.. clones submodules into empty directories",

    clean => "About: 01.. cleans submodules from uncommitted changes",

    rm    => "About: 01.. removes the cloned submodules (locally only, not removing anything on origin)",

    pull  => "
About: 01.. Pulls a 'group' of submodules.
About: 02.. Intermediate meta repo's submodules are fetched & integrated into the local submodule's checked-out branch.
About: 03..  - i.e. any checked out a branch in the intermediate repo WILL NOT BE CHANGED",

    reset => "
About: 01... resets a 'group' of submodules, per system (basestation, localhost)
About: 02...    - example: localhost does not clone hardware, basestation clones hardware
About: 03... intermediate meta repo's submodules are reset to its DEATACHED HEAD.
About: 04...    - i.e. any checked out a branch in the intermediate repo WILL BE RESET to its HEAD commit.
About: 04... - slam submodules have special permissions -- that is why they are separate commands.
About: 05... - please make sure you have permissions to clone (notify maintainer if you need permissions)",

  ignore => "
About: 01... ignore pre-defined files from git index
About: 02... - ignores files (already committed to origin) from the git index, so you will not see them as uncommitted changes.
About: 03... - these files are predefined by the maintainer -- usually auto-generated files
About: 04... - use 'ignore', it will reduce the amount of unnecessary files to track from the 'git status'
About: 05...",

  unignore => "
About: 01... unignore pre-defined files from git index
About: 02... - unignores files from git index, so you will not see them as uncommitted changes.
About: 03... - these files are predefined by the maintainer -- usually auto-generated files
About: 04... - use 'unignore', it will reduce the amount of unnecessary files to track from the 'git status'
About: 05...",
);

# @brief general git help message creator
sub get_git_help_messages {

  # get the type of git command (add in messages strings)
  my ($_git_cmd_type) = @_;

  # setup the git command summary message
  my $_message_header = $_git_switch_message_headers{$_git_cmd_type};

  # setup the title
  my $_title = uc $_git_cmd_type;
  my $_title = uc "About: 00.. == $_title ==";


  # @brief setup all the git help messages available (per system switch)

my $_git_system_help = ("
$_title
$_message_header
$_optional_options

localhost     : $_git_cmd_type the submodules for developing on a localhost.
basestation   : $_git_cmd_type the submodules for developing on one of the robots' basestation laptops.
");

my $_deployer_basestation_help = ("
$_title
$_message_header
$_optional_options

system76        : system76-pc laptop, for running both ugv & uav robots
laptop          : the uav specific drone laptop
");

my $_deployer_localhost_help = ("
$_title
$_message_header
$_optional_options

basestation        : ~/deploy_ws/src/basestation
common             : ~/deploy_ws/src/common
perception         : ~/deploy_ws/src/perception
simulation         : ~/deploy_ws/src/simulation
ugv                : ~/deploy_ws/src/ugv
uav                : ~/deploy_ws/src/uav
");

my $_deployer_system76_help = ("
$_title
$_message_header
$_optional_options

basestation        : ~/deploy_ws/src/basestation
common             : ~/deploy_ws/src/common
perception         : ~/deploy_ws/src/perception
simulation         : ~/deploy_ws/src/simulation
ugv                : ~/deploy_ws/src/ugv
uav                : ~/deploy_ws/src/uav
");

my $_deployer_laptop_uav_help = ("
$_title
$_message_header
$_optional_options

basestation        : ~/deploy_ws/src/basestation
common             : ~/deploy_ws/src/common
perception         : ~/deploy_ws/src/perception
simulation         : ~/deploy_ws/src/simulation
uav                : ~/deploy_ws/src/uav
");

my $_deployer_slam_help = ("
$_title
$_message_header
$_optional_options

ugv         : ~/deploy_ws/src/ugv/slam
uav         : ~/deploy_ws/src/uav/slam
");

# TODO
my $_deployer_slam_ugv_help = ("
About: 00... == $_git_cmd_type the ugv slam submodules (loam, superodometry) ==
About: 01... $_git_cmd_types submodules from uncommitted changes.
About: 02... == Optional Flags ==
About: 03...
About: 04...   -p           : preview the deployer commands that will be run
About: 05...   -verbose     : show the exact (verbose) bash commands that will run
About: 06...
About: 07... == Your Options Are ==
About: 08...
devel         : ~/deploy_ws/src/ugv/slam/devel (slam submodules for localhost development -- does not go on robot)
robot         : ~/deploy_ws/src/ugv/slam/robot (slam submodules for ugv robot -- very special permission! USE DEVEL unless you KNOW you want the robot one.)
");

my $_deployer_slam_uav_help = ("
About: 00... == $_git_cmd_type the uav slam submodules (loam, superodometry) ==
About: 01... $_git_cmd_types submodules from uncommitted changes.
About: 02... == Optional Flags ==
About: 03...
About: 04...   -p           : preview the deployer commands that will be run
About: 05...   -verbose     : show the exact (verbose) bash commands that will run
About: 06...
About: 07... == Your Options Are ==
About: 08...
uav               : ~/deploy_ws/src/uav/slam
");

  # @brief assign help keys to usage messages as hashmap -- hack: convert array to hashmap
  @_git_help = ({
    id      => "$_git_cmd_type",
    help    => $_git_system_help,
  },{
    id      => "localhost",
    help    => $_deployer_localhost_help,
  },{
    id      => "basestation",
    help    => $_deployer_basestation_help,
  },{
    id      => "system76",
    help    => $_deployer_system76_help,
  },{
    id      => "laptop",
    help    => $_deployer_laptop_uav_help,
  # },{
  #   id      => "slam",
  #   help    => $_deployer_slam_help,
  # },{
  #   id      => "slam.ugv",
  #   help    => $_deployer_slam_ugv_help,
  # },{
  #   id      => "slam.uav",
  #   help    => $_deployer_slam_uav_help,
  });

  # return the help id <-> help str message dictionary
  return @_git_help
}

