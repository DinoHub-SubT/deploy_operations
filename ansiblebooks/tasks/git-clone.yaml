---
# ////////////////////////////////////////////////////////////////////////
# Install Git Deploy Repository Setup
# ////////////////////////////////////////////////////////////////////////
- name: Install Git Deploy Repository Setup

  # setup variables to be shared in tasks
  vars_files:
    - ../vars/main.yaml
    - "{{ lookup('env','SUBT_CONFIGURATION_PATH') }}/ansible_config.yaml"

  # setup hosts to run commands as
  hosts:
    - laptop
    - basestation
    - ugv
    - uav
    - perception
  become_method: sudo
  become_user: root

  # ////////////////////////////////////////////////////////////////////////
  # Tasks to execute
  # ////////////////////////////////////////////////////////////////////////
  tasks:

    # ////////////////////////////////////////////////////////////////////////
    # Deploy Repo
    # ////////////////////////////////////////////////////////////////////////

    - name: Remove Previously Cloned Deploy Repo
      file:
        path: "~/{{ lookup('env','DEPLOYER_WS_NAME') }}/src"
        state: absent

    - name: Clone The SubT Deploy Repository
      git:
        repo: git@bitbucket.org:cmusubt/deploy.git
        dest: "~/{{ lookup('env','DEPLOYER_WS_NAME') }}/src"
        accept_hostkey: yes
        recursive: no
        force: yes
        version: "{{ git.deploy.branch }}"
        key_file: ~/.ssh/bitbucket
      when:
        "{{ project_name }}" == "subt"

    - name: Clone The DSTA Deploy Repository
      git:
        repo: git@bitbucket.org:castacks/dsta_deploy.git
        dest: "~/{{ lookup('env','DEPLOYER_WS_NAME') }}/src"
        accept_hostkey: yes
        recursive: no
        force: yes
        version: "{{ git.deploy.branch }}"
        key_file: ~/.ssh/bitbucket
      when:
        "{{ project_name }}" == "dsta"

    - name: Install Deployer Script
      shell:
        cmd: ./install-deployer.bash --install
        chdir: "~/{{ lookup('env','DEPLOYER_WS_NAME') }}/src"

    - name: Azure uav to always use gpu docker images
      lineinfile:
        path: "~/.{{ project_name }}/user_config.bash"
        regexp: 'export USE_ENHANCED_GPU_DOCKER_IMAGES='
        line: export USE_ENHANCED_GPU_DOCKER_IMAGES=true
      when:
        inventory_hostname is match("azure-uav*")

    # ////////////////////////////////////////////////////////////////////////
    # Clone All Submodules
    # ////////////////////////////////////////////////////////////////////////

    - name: Validate Git Status
      shell:
        cmd: git status
        chdir: ~/{{ lookup('env','DEPLOYER_WS_NAME') }}/src
      register: git_status_out

    - name: Output Validate Git Status
      debug:
        msg: "Git Status: {{git_status_out.stdout}}"

    - name: Submodule Clone All Submodules
      shell:
        cmd: git submodule update --init --recursive .
        chdir: ~/{{ lookup('env','DEPLOYER_WS_NAME') }}/src

