---
# ////////////////////////////////////////////////////////////////////////
# setup & install nvidia-docker
# ////////////////////////////////////////////////////////////////////////
- name: nvidia-docker setup

  vars_files:
    - ../vars/main.yaml
    - "{{ lookup('env','SUBT_CONFIGURATION_PATH') }}/ansible_config.yaml"

  # run playbook on the specified hosts
  hosts:
    - laptop
    - basestation
    - perception
    - ugv
    - spot
    - uav
  become_method: sudo
  become_user: root

  # ////////////////////////////////////////////////////////////////////////
  # Tasks to execute
  # ////////////////////////////////////////////////////////////////////////
  tasks:

  # ////////////////////////////////////////////////////////////////////////
  # NVIDIA Docker
  # ////////////////////////////////////////////////////////////////////////

  - name: check nvidia-smi installed
    shell: nvidia-smi
    ignore_errors: yes
    register: nvidia_smi_output

  # change some default parameters in the VMS
  - name: Set Nvidia Daemon Variable
    set_fact:
      install_nvidia_docker: true
    when: >
      nvidia_smi_output.rc == 0

  - name: remove previous nvidia-docker manual install
    become: true
    shell: docker volume ls -q -f driver=nvidia-docker | xargs -r -I{} -n1 docker ps -q -a -f volume={} | xargs -r docker rm -f
    ignore_errors: yes
    when: >
      install_nvidia_docker

  - name: remove previous nvidia-docker apt install
    become: true
    apt:
      name: "{{ nvidia_docker_purge_packages }}"
      state: present
      force_apt_get: yes
    ignore_errors: yes
    when: >
      install_nvidia_docker

  - name: update apt packages
    become: true
    apt:
      update_cache: yes
    when: >
      install_nvidia_docker

  - name: install docker dependency packages
    become: true
    apt:
      name: "{{ docker_packages }}"
      state: present
      force_apt_get: yes
    when: >
      install_nvidia_docker

  - name: add official GPG key of nvidia docker
    shell: curl -fsSL https://nvidia.github.io/nvidia-docker/gpgkey | sudo apt-key add -
    when: >
      install_nvidia_docker

  - name: save the current Ubuntu release version
    shell: . /etc/os-release;echo $ID$VERSION_ID
    register: distribution
    when: >
      install_nvidia_docker

  - name: update apt packages with nvidia docker
    become: true
    shell: curl -s -L https://nvidia.github.io/nvidia-docker/{{ distribution.stdout }}/nvidia-docker.list | tee /etc/apt/sources.list.d/nvidia-docker.list
    when: >
      install_nvidia_docker

  - name: update apt packages
    become: true
    apt:
      update_cache: yes
    when: >
      install_nvidia_docker

  - name: install nvidia-docker
    become: true
    apt:
      name: "{{ nvidia_docker_packages }}"
      state: present
      force_apt_get: yes
    when: >
      install_nvidia_docker

  - name: restart docker service
    become: true
    systemd:
      state: restarted
      daemon_reload: yes
      name: docker
    when: >
      install_nvidia_docker

  - name: validate nvidia-docker
    shell: nvidia-docker --version
    register: docker_version_out
    when: >
      install_nvidia_docker

  - name: output validate docker
    debug:
      msg: "Container Output: {{docker_version_out.stdout}}"
    when: >
      install_nvidia_docker

  - name: test nvidia-docker with 'hello world' example
    shell: docker run --runtime=nvidia --rm nvidia/cuda:8.0-runtime nvidia-smi
    register: hello_world_output
    when: >
      install_nvidia_docker

  - name: show output of 'hello word' example
    debug:
      msg: "Container Output: {{hello_world_output.stdout}}"
    when: >
      install_nvidia_docker
