# //////////////////////////////////////////////////////////////////////////////
# setup robot hostname and ip configurations
# //////////////////////////////////////////////////////////////////////////////

# given by the deployerbooks call, robot name (example: ugv1, ugv2, ugv3)
export ROBOT=${1}
export ROBOT_IP_NAME=$(eval echo ${ROBOT}_ip)
export ROBOT_ROS_MASTER_IP=$(eval echo "${!ROBOT_IP_NAME}")

# Setup the bashrc roscore environment variables
export ROS_MASTER_IP=${ROBOT_ROS_MASTER_IP}
export ROS_HOSTNAME=${ROBOT}

# computer argument
export COMPUTER=${ROBOT}

# //////////////////////////////////////////////////////////////////////////////
# setup docker, per project, configuctionares
# //////////////////////////////////////////////////////////////////////////////

# export the docker image type
# - COMPUTER_ARCH                   set in deployerbooks        (x86, arm)
# - DOCKER_IMAGE_ARCH               set in scenarios/.base.env  (cpu, gpu)
# - DOCKER_COMPOSE_IMAGE_SHORT_NAME set in deployerbooks
# - DOCKER_IMAGE_TAG                set in scenarios/.base.env
export DOCKER_IMAGE_NAME=subt/${COMPUTER_ARCH}.${2}.${DOCKER_IMAGE_ARCH}.${DOCKER_COMPOSE_IMAGE_SHORT_NAME}:${DOCKER_IMAGE_TAG}

# relative path to (from dockerfiles) the child docker compose file to nest
# -- please see 'misc.env' for the final extension setup
export CHILD_DOCKER_COMPOSE="${2}"

# export the local docker compose -- uses user-defined network
export CHILD_DOCKER_COMPOSE="${CHILD_DOCKER_COMPOSE}.${DOCKER_COMPOSE_INFRASTRUCTURE_TYPE}.yml"

# //////////////////////////////////////////////////////////////////////////////
# remote shared configurations
# //////////////////////////////////////////////////////////////////////////////

# -- azure remote --

# deployer, configuration to ssh into the remote host
export azure_deploy_ssh=azure.${ROBOT}

# deployer exported variables (remote host)
export azure_deploy_remote_username=subt
export azure_deploy_remote_hostname=azure-${ROBOT}

# -- robot (uav) remote --

# deployer, configuration to ssh into the remote host
# - UAV_COMPUTER example: ds1, ds2, etc.
export robot_uav_deploy_ssh=${ROBOT}.ds
export robot_canary_deploy_ssh=${ROBOT}.canary

# remote uav, ds computer
export robot_uav_deploy_remote_username=uav
export robot_uav_deploy_remote_hostname=${UAV_COMPUTER}

# -- robot (ugv) remote --

# remote ppc computer
export ppc_deploy_remote_username=explorer
export ppc_deploy_remote_hostname=ugv1

# remote nuc computer
export nuc_deploy_remote_username=nuc
export nuc_deploy_remote_hostname=nuc

# remote xavier computer
export xavier_deploy_remote_username=nvidia
export xavier_deploy_remote_hostname=xavier

# -- robot (spot) remote --

# remote nuc computer
export spot_nuc_deploy_remote_username=nuc
export spot_nuc_deploy_remote_hostname=spot1-nuc

# remote xavier computer
export spot_xavier_deploy_remote_username=capsa
export spot_xavier_deploy_remote_hostname=spot1-xavier
