# -- general settings --

# default gpu docker configuration
export GPU_ENABLE_TYPE="non-gpu"

# setup the default architecture, docker image type
export DOCKER_IMAGE_ARCH="cpu"

# docker image registries
export AZURE_REGISTRY="subtexplore.azurecr.io"
export BASESTATION_REGISTRY="system76-pc:5000"
export DRONE_LAPTOP_REGISTRY="john-pc:5000"
export LOCAL_REGISTRY="localhost:5000"

# -- docker network setup --

# localhost docker network subnet
export LOCAL_NETWORK_SUBNET="10.3.0.0/16"

# localhost docker network ip range
export LOCAL_NETWORK_IP_RANGE="10.3.0.0/22"

# -- docker images --

# docker image tag -- matched deployer commit hash of when the docker images where built
export DOCKER_IMAGE_TAG=249324c

# setup some base images
export DOCKER_ROS_BASE_CPU_IMAGE=nvidia/opengl:1.0-glvnd-devel-ubuntu18.04
export DOCKER_ROS_BASE_GPU_IMAGE=nvidia/cudagl:10.0-devel-ubuntu18.04

# export the docker base image
export DOCKER_BASE_IMAGE_ROS=$DOCKER_ROS_BASE_CPU_IMAGE

# -- setup which type of architecture to use --

# enable nvidia gpu, only if the user has set up the configuration
if [ "$USE_NVIDIA_DRIVER" = true ] ; then
  export GPU_ENABLE_TYPE="x86-gpu"

  # enable nvidia gpu, only if the user has set up the configuration
  if [ "$USE_ENHANCED_GPU_DOCKER_IMAGES" = true ] ; then
    export DOCKER_IMAGE_ARCH="gpu"
    export DOCKER_BASE_IMAGE_ROS=$DOCKER_ROS_BASE_GPU_IMAGE
  fi
else
  export GPU_ENABLE_TYPE="non-gpu"
fi

# -- docker entrypoint workspaces --

export DEPLOY_WS_PREFIX="/home/developer/deploy_ws/devel/"
export BASESTATION_WS="$DEPLOY_WS_PREFIX/basestation/launch/setup.bash"
export PERCEPTION_WS="$DEPLOY_WS_PREFIX/perception/launch/setup.bash"
export UGV_PPC_WS_SOURCE="$DEPLOY_WS_PREFIX/ugv/ppc/launch/setup.bash"
export UGV_NUC_WS_SOURCE="$DEPLOY_WS_PREFIX/ugv/nuc/launch/setup.bash"
export UGV_SLAM_WS_SOURCE="$DEPLOY_WS_PREFIX/ugv/slam/launch/setup.bash"
export UGV_SIM_WS_SOURCE="$DEPLOY_WS_PREFIX/ugv/launch/setup.bash"
export UGV_PERCEPTION_WS_SOURCE="$DEPLOY_WS_PREFIX/ugv/perception/launch/setup.bash"
export UAV_WS_SOURCE="$DEPLOY_WS_PREFIX/uav/launch/setup.bash"

# set the uav entrypoint (docker-compose for uav.simulation and uav.robot)
export UAV_DOCKER_ENTRYPOINT="ws-shell.bash"

# -- deployer environment variables sourced --
# TODO: remove?

# deployer environment settings used in container (unfortunately, it is hard-coded..., needs to change to relative)
export DEPLOYER_PATH=/home/developer/deploy_ws/src/operations/deployer/
export DEPLOYER_BOOKS_PATH=/home/developer/deploy_ws/src/operations/deploybooks/
export DEPLOYER_SCRIPTS=/home/developer/deploy_ws/src/operations/deployer/bin/
export DEPLOYER_EXPORT_FILEPATH=/home/developer/.subt/.completion/
export DEPLOYER_BASHRC_FILEPATH=.subt/subtrc.bash

# deployer configuration settings
export DEPLOYER_PARALLELIZE_MATCHES_JOBS=$DEPLOYER_PARALLELIZE_MATCHES_JOBS
export DEPLOYER_WS_NAME=$DEPLOYER_WS_NAME

