# //////////////////////////////////////////////////////////////////////////////
# @brief UGV, on Hardware Robots
# //////////////////////////////////////////////////////////////////////////////
version: '2.3'
services:

  # @brief UGV, base, ROS
  spot.nuc-ros:
    image: ${DOCKER_IMAGE_NAME}
    build:
      context:    ${SUBT_DOCKERFILE_PATH}/
      dockerfile: ${SUBT_DOCKERFILE_PATH}/services/x86.base.ros.dockerfile
    extends:
      service: ${DOCKER_COMPOSE_BASE_SERVICE}
    container_name: ros-shell
    entrypoint: $entry_path/ros-shell.bash
    tty: true # keep container running

  # @brief UAV, ROS, superodometry
  spot.nuc-superodometry:
    image: ${DOCKER_IMAGE_NAME}
    build:
      context:    ${SUBT_DOCKERFILE_PATH}/
      dockerfile: ${SUBT_DOCKERFILE_PATH}/services/x86.superodometry.dockerfile
    extends:
      service: ${DOCKER_COMPOSE_BASE_SERVICE}
    container_name: $ROBOT-super-shell
    entrypoint: $entry_path/ros-shell.bash
    tty: true # keep container running
    # TODO: base image as env variable

  # @brief UGV, nuc
  spot.nuc-core:
    image: ${DOCKER_IMAGE_NAME}
    build:
      context:    ${SUBT_DOCKERFILE_PATH}/
      dockerfile: ${SUBT_DOCKERFILE_PATH}/services/x86.spot.nuc.dockerfile
    extends:
      service: ${DOCKER_COMPOSE_BASE_SERVICE}
    container_name: $ROBOT-core-shell
    entrypoint: $entry_path/ws-shell.bash
    tty: true # keep container running
    environment:
      - ws_devel_source=$SPOT_NUC_WS_SOURCE
